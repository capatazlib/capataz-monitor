version: '3'

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  backend: {}
  frontend:
    driver: bridge

services:
  prometheus:
    image: 'prom/prometheus'
    volumes:
      - './etc/prometheus/:/etc/prometheus/'
      - 'prometheus_data:/prometheus'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--log.level=debug'
    ports:
      - "9090:9090"
    networks:
      - backend
      - frontend

  # node-exporter:
  #   image: 'prom/node-exporter'
  #   volumes:
  #     - '/proc:/host/proc:ro'
  #     - '/sys:/host/sys:ro'
  #     - '/:/rootfs:ro'
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.sysfs=/host/sys'
  #     - '--collector.filesystem.ignored-mount-points'
  #     - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
  #   ports:
  #     - '9100:9100'
  #   restart: 'always'
  #   deploy:
  #     mode: 'global'

  grafana:
    image: 'grafana/grafana'
    links:
      - 'prometheus'
    depends_on:
      - 'prometheus'
    ports:
      - '3000:3000'
    volumes:
      - './etc/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards'
      - './etc/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources'
      - 'grafana_data:/var/lib/grafana'
    env_file:
      - './etc/grafana/config.monitoring'
    networks:
      - backend
      - frontend
    restart: 'always'
